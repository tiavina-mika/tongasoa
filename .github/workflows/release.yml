# GitHub Actions workflow to automate release and publishing to NPM
# This workflow is triggered on pushes to the main branch.

name: Release & Publish
run-name: Release & publish to npm by ${{ github.actor }} ðŸš€

on:
  push:
    branches:
      - release

jobs:
  # Build the project after commit linting is successful
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Yarn 4
        run: corepack enable && corepack prepare yarn@4 --activate


      # This step restores the Yarn cache to speed up installation
      # It uses the hash of the yarn.lock file to ensure the cache is valid
      # If there is no new installation, the cache will be restored from the previous run
      - name: Restore Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/unplugged
            .yarn/build-state.yml
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build project
        run: yarn build

      # display dist directory contents for debugging
      - name: Show dist directory contents (debug)
        run: ls -l dist

  release:
    runs-on: ubuntu-latest
    # Semantic-release needs write permissions to create releases
    # and to comment on issues and pull requests
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install Yarn 4
        run: corepack enable && corepack prepare yarn@4 --activate

      # This step restores the Yarn cache to speed up installation
      # It uses the hash of the yarn.lock file to ensure the cache is valid
      # If there is no new installation, the cache will be restored from the previous run
      - name: Restore Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/unplugged
            .yarn/build-state.yml
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      # display dist directory contents for debugging
      - name: Show dist directory  2 (debug)
        run: ls -l

      # Publish the package to NPM using semantic-release
      - name: Publish package on NPM ðŸ“¦
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      # Optional: Show the NPM package link after publishing
      - name: Show NPM package link
        run: echo "Published to NPM ðŸš€- https://www.npmjs.com/package/${{ github.event.repository.name }}"
